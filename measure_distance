import RPi.GPIO as GPIO
import time  # time 라이브러리를 사용하여 시간 지연을 관리

# TRIGGER와 ECHO의 GPIO 핀 번호 설정
TRIGGER = 17
ECHO = 18

# GPIO를 BCM 모드로 설정
GPIO.setmode(GPIO.BCM)

# TRIGGER를 출력, ECHO를 입력으로 설정
GPIO.setup(TRIGGER, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)

# 거리를 측정하는 함수 정의
def measure_distance():
    GPIO.output(TRIGGER, GPIO.LOW)
    time.sleep(0.00001)
    GPIO.output(TRIGGER, GPIO.HIGH)
    time.sleep(0.00001)
    GPIO.output(TRIGGER, GPIO.LOW)

    # 펄스가 전송 및 수신되기를 대기
    while GPIO.input(ECHO) == 0:
        start_time = time.time()
    while GPIO.input(ECHO) == 1:
        stop_time = time.time()

    # 경과 시간과 거리를 계산
    elapsed_time = stop_time - start_time
    distance = elapsed_time * 34000.0 / 2.0  # 음속은 340 미터/초
    return distance

try:
    while True:
        distance = measure_distance()
        print(f"거리: {distance:.2f} 센티미터")
        time.sleep(1)

except KeyboardInterrupt:
    # 키보드 인터럽트가 발생하면 GPIO를 정리
    GPIO.cleanup()
